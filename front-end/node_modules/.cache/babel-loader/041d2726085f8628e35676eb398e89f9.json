{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/AddReview.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    background: var(--main-green);\\n    border: none;\\n    color: var(--main-bg-color);\\n    font-size: 1rem;\\n    padding: .75rem;\\n    border-radius: 25px;\\n    margin-top: .5rem;\\n\\n    :hover {\\n        background: var(--main-green-hover);\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation($review: String!, $title: String!, $username: String!) {\\n  addReview(review: $review, title: $title, username: $username){\\n    review\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { GetMovie } from './MovieReviews';\nimport { CurrentUserQuery } from './auth/User';\nimport styled from 'styled-components';\nvar ReviewMovie = gql(_templateObject());\nvar initalState = {\n  review: \"\"\n};\n\nvar AddReview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddReview, _Component);\n\n  function AddReview() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddReview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddReview)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = _objectSpread({}, initalState);\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e, addReview) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return addReview();\n\n              case 3:\n                _context.next = 5;\n                return console.log(document.getElementById(\"addReviewForm\"));\n\n              case 5:\n                _context.next = 7;\n                return _this.clearForm();\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.clearForm = function () {\n      _this.setState(_objectSpread({}, initalState));\n    };\n\n    return _this;\n  }\n\n  _createClass(AddReview, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          username = _this$props.username,\n          title = _this$props.title,\n          movieDBId = _this$props.movieDBId;\n      var review = this.state.review;\n      return React.createElement(Mutation, {\n        mutation: ReviewMovie,\n        variables: {\n          title: title,\n          username: username,\n          review: review\n        },\n        refetchQueries: [{\n          query: GetMovie,\n          variables: {\n            movieDBId: movieDBId\n          }\n        }, {\n          query: CurrentUserQuery\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, function (addReview, _ref2) {\n        var loading = _ref2.loading,\n            error = _ref2.error;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          id: \"addReviewForm\",\n          onSubmit: function onSubmit(e) {\n            return _this2.handleSubmit(e, addReview);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          onChange: _this2.handleChange,\n          name: \"review\",\n          cols: \"100\",\n          rows: \"5\",\n          placeholder: \"Write a Review\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }), React.createElement(AddReviewButton, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Add\", loading ? \"ing\" : \"\", \" Review\")), error && error.message);\n      });\n    }\n  }]);\n\n  return AddReview;\n}(Component);\n\nvar AddReviewButton = styled.button(_templateObject2());\nexport default AddReview;","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/AddReview.js"],"names":["React","Component","gql","Mutation","GetMovie","CurrentUserQuery","styled","ReviewMovie","initalState","review","AddReview","state","handleChange","e","target","name","value","setState","handleSubmit","addReview","preventDefault","console","log","document","getElementById","clearForm","props","username","title","movieDBId","query","variables","loading","error","message","AddReviewButton","button"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nimport { GetMovie } from './MovieReviews';\nimport { CurrentUserQuery } from './auth/User';\nimport styled from 'styled-components';\n\nconst ReviewMovie = gql`\nmutation($review: String!, $title: String!, $username: String!) {\n  addReview(review: $review, title: $title, username: $username){\n    review\n  }\n}`;\n\nconst initalState = {\n    review: \"\"\n}\nclass AddReview extends Component {\n    state = {\n        ...initalState\n    }\n    handleChange = (e) => {\n        const {name, value} = e.target;\n        this.setState({\n            [name] :value\n        })\n    }\n    handleSubmit = async (e,addReview) => {\n        e.preventDefault();\n        await addReview()\n        await console.log(document.getElementById(\"addReviewForm\"))\n        await this.clearForm();\n    }\n    clearForm = () => {\n        this.setState({\n            ...initalState\n        })\n    }\n  render() {\n      const { username, title, movieDBId} = this.props;\n      const { review } = this.state;\n    return (\n        <Mutation \n        mutation={ReviewMovie}\n        variables={{\n        title,\n        username, \n        review}}\n        refetchQueries={[ {query: GetMovie, variables:{movieDBId}}, {query: CurrentUserQuery} ]}\n        >\n        {(addReview, {loading, error }) => {\n            return(\n        <div>\n            <form id=\"addReviewForm\" onSubmit={(e) => this.handleSubmit(e, addReview)}>\n                <textarea onChange={this.handleChange} name=\"review\" cols=\"100\" rows=\"5\" placeholder=\"Write a Review\" />\n                <AddReviewButton>Add{loading ? \"ing\" : \"\"} Review</AddReviewButton>\n            </form>\n            {error && error.message}\n        </div>\n            )}}\n        </Mutation>\n    )\n  }\n}\n\nconst AddReviewButton = styled.button`\n    display: block;\n    background: var(--main-green);\n    border: none;\n    color: var(--main-bg-color);\n    font-size: 1rem;\n    padding: .75rem;\n    border-radius: 25px;\n    margin-top: .5rem;\n\n    :hover {\n        background: var(--main-green-hover);\n    }\n`;\nexport default AddReview;"]},"metadata":{},"sourceType":"module"}