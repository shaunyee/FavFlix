{"ast":null,"code":"import _defineProperty from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/AddReview.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nmutation($review: String!, $title: String!, $username: Stirng!) {\\n  addReview(review: $review, title: $title, username: $username){\\n    review\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { GetMovie } from './MovieReviews';\nvar ReviewMovie = gql(_templateObject());\n\nvar AddReview =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddReview, _Component);\n\n  function AddReview() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AddReview);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AddReview)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      review: \"\"\n    };\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleSubmit = function (e, addReview) {\n      e.preventDefault();\n      addReview();\n    };\n\n    return _this;\n  }\n\n  _createClass(AddReview, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          title = _this$props.title,\n          username = _this$props.username;\n      var review = this.state.review;\n      return React.createElement(Mutation, {\n        mutation: ReviewMovie,\n        variables: {\n          title: title,\n          username: username,\n          review: review\n        },\n        refetchQueries: [{\n          query: GetMovie\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, function (addReview, _ref) {\n        var loading = _ref.loading;\n        return React.createElement(\"form\", {\n          onSubmit: function onSubmit(e) {\n            return _this2.handleSubmit(e, addReview);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, React.createElement(\"textarea\", {\n          onChange: _this2.handleChange,\n          name: \"review\",\n          cols: \"100\",\n          rows: \"5\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Add\", loading ? \"ing\" : \"\", \" Review\"));\n      });\n    }\n  }]);\n\n  return AddReview;\n}(Component);\n\nexport default AddReview;","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/AddReview.js"],"names":["React","Component","gql","Mutation","GetMovie","ReviewMovie","AddReview","state","review","handleChange","e","target","name","value","setState","handleSubmit","addReview","preventDefault","props","title","username","query","loading"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,QAAT,QAAyB,gBAAzB;AAGA,IAAMC,WAAW,GAAGH,GAAH,mBAAjB;;IAOMI,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAC;AADH,K;;UAGRC,Y,GAAe,UAACC,CAAD,EAAO;AAAA,sBACIA,CAAC,CAACC,MADN;AAAA,UACXC,IADW,aACXA,IADW;AAAA,UACLC,KADK,aACLA,KADK;;AAElB,YAAKC,QAAL,qBACKF,IADL,EACYC,KADZ;AAGH,K;;UACDE,Y,GAAe,UAACL,CAAD,EAAIM,SAAJ,EAAkB;AAC7BN,MAAAA,CAAC,CAACO,cAAF;AACAD,MAAAA,SAAS;AACZ,K;;;;;;;6BACM;AAAA;;AAAA,wBACqB,KAAKE,KAD1B;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UAECZ,MAFD,GAEY,KAAKD,KAFjB,CAECC,MAFD;AAGP,aACI,oBAAC,QAAD;AACA,QAAA,QAAQ,EAAEH,WADV;AAEA,QAAA,SAAS,EAAE;AAACc,UAAAA,KAAK,EAALA,KAAD;AAAQC,UAAAA,QAAQ,EAARA,QAAR;AAAkBZ,UAAAA,MAAM,EAANA;AAAlB,SAFX;AAGA,QAAA,cAAc,EAAE,CAAC;AAACa,UAAAA,KAAK,EAAEjB;AAAR,SAAD,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKC,UAACY,SAAD,QAA2B;AAAA,YAAdM,OAAc,QAAdA,OAAc;AACxB,eACA;AAAM,UAAA,QAAQ,EAAE,kBAACZ,CAAD;AAAA,mBAAO,MAAI,CAACK,YAAL,CAAkBL,CAAlB,EAAqBM,SAArB,CAAP;AAAA,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAU,UAAA,QAAQ,EAAE,MAAI,CAACP,YAAzB;AAAuC,UAAA,IAAI,EAAC,QAA5C;AAAqD,UAAA,IAAI,EAAC,KAA1D;AAAgE,UAAA,IAAI,EAAC,GAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAYa,OAAO,GAAG,KAAH,GAAW,EAA9B,YAFJ,CADA;AAKE,OAXN,CADJ;AAeD;;;;EAhCqBrB,S;;AAkCxB,eAAeK,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nimport { GetMovie } from './MovieReviews';\n\n\nconst ReviewMovie = gql`\nmutation($review: String!, $title: String!, $username: Stirng!) {\n  addReview(review: $review, title: $title, username: $username){\n    review\n  }\n}`;\n\nclass AddReview extends Component {\n    state = {\n        review:\"\"\n    }\n    handleChange = (e) => {\n        const {name, value} = e.target;\n        this.setState({\n            [name] :value\n        })\n    }\n    handleSubmit = (e, addReview) => {\n        e.preventDefault();\n        addReview();\n    }\n  render() {\n    const { title, username } = this.props;\n    const { review } = this.state;\n    return (\n        <Mutation \n        mutation={ReviewMovie}\n        variables={{title, username, review}}\n        refetchQueries={[{query: GetMovie}]}\n        >\n        {(addReview, {loading }) => {\n            return(\n            <form onSubmit={(e) => this.handleSubmit(e, addReview)}>\n                <textarea onChange={this.handleChange} name=\"review\" cols=\"100\" rows=\"5\" />\n                <button>Add{loading ? \"ing\" : \"\"} Review</button>\n            </form>\n            )}}\n        </Mutation>\n    )\n  }\n}\nexport default AddReview;"]},"metadata":{},"sourceType":"module"}