{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/MovieDetail.js\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  border-top: .5px solid var(--main-green);\\n  border-bottom: .5px solid var(--main-green);\\n  margin: 0;\\n  margin-bottom: 5px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 2rem 10%;\\n\\n  h1 {\\n    color: var(--main-green);\\n    margin-bottom: 0;\\n  }\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  background: var(--main-bg-color);\\n  text-align: left;\\n  padding: 2rem 10%;\\n  display: flex;\\n  color: var(--main-text-color);\\n  h1 {\\n    color: var(--main-green);\\n  }\\n  > div {\\n    margin-left: 20px;\\n  }\\n  img {\\n    position: relative;\\n    top: -5rem;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  padding-top: 50vh;\\n  background: url(\", \") no-repeat;\\n  background-size: cover;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery {\\n  getAllMovies{\\n    movieDBId\\n  }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport AddToFavorites from './AddToFavorites';\nimport User from './auth/User';\nimport MovieReviews from './MovieReviews';\nimport AddReview from './AddReview';\nimport SeenMovie from './SeenMovie';\nvar POSTER_PATH = 'http://image.tmdb.org/t/p/w154';\nvar BACKDROP_PATH = 'http://image.tmdb.org/t/p/w1280';\nvar GetAllMovies = gql(_templateObject());\n\nvar MovieDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MovieDetail, _Component);\n\n  function MovieDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, MovieDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(MovieDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movie: {}\n    };\n    return _this;\n  }\n\n  _createClass(MovieDetail, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var res, movie;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return fetch(\"https://api.themoviedb.org/3/movie/\".concat(this.props.match.params.id, \"?api_key=a8cdfa69af55f80964d61a4a96025998&language=en-US\"));\n\n              case 3:\n                res = _context.sent;\n                _context.next = 6;\n                return res.json();\n\n              case 6:\n                movie = _context.sent;\n                _context.next = 9;\n                return this.setState({\n                  movie: movie\n                });\n\n              case 9:\n                _context.next = 14;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var movie = this.state.movie;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(MovieWrapper, {\n        backdrop: \"\".concat(BACKDROP_PATH).concat(movie.backdrop_path),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(MovieInfo, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"\".concat(POSTER_PATH).concat(movie.poster_path),\n        alt: movie.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, movie.title), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, movie.release_date), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, movie.overview)))), React.createElement(User, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, function (_ref) {\n        var currentUser = _ref.data.currentUser,\n            loading = _ref.loading;\n        if (loading) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Loading\");\n        return React.createElement(Query, {\n          query: GetAllMovies,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, function (_ref2) {\n          var getAllMovies = _ref2.data.getAllMovies,\n              loading = _ref2.loading,\n              error = _ref2.error;\n          if (loading) return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \"Loading\");\n          if (error) return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }, error.message);\n          var movieDBIds = getAllMovies.map(function (movie) {\n            return movie.movieDBId;\n          });\n          var inDB = movieDBIds.includes(movie.id);\n\n          if (!currentUser) {\n            return React.createElement(UserReviewSection, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69\n              },\n              __self: this\n            }, React.createElement(\"h1\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 70\n              },\n              __self: this\n            }, \"Reviews\"), React.createElement(SectionBreak, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 71\n              },\n              __self: this\n            }), inDB && React.createElement(MovieReviews, {\n              movieDBId: movie.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72\n              },\n              __self: this\n            }));\n          }\n\n          var usersSeenMovies = currentUser.moviesSeen.map(function (movie) {\n            return movie.movieDBId;\n          });\n          var seenThisMovie = usersSeenMovies.includes(movie.id);\n          return React.createElement(UserReviewSection, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, !seenThisMovie && React.createElement(SeenMovie, {\n            movie: movie,\n            user: currentUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }), seenThisMovie && React.createElement(AddToFavorites, {\n            movie: movie,\n            user: currentUser,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81\n            },\n            __self: this\n          }), React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82\n            },\n            __self: this\n          }, \"Reviews\"), React.createElement(SectionBreak, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83\n            },\n            __self: this\n          }), seenThisMovie && React.createElement(AddReview, {\n            title: movie.title,\n            username: currentUser.username,\n            movieDBId: movie.id,\n            posterPath: movie.poster_path,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84\n            },\n            __self: this\n          }), inDB && React.createElement(MovieReviews, {\n            movieDBId: movie.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }));\n        });\n      }));\n    }\n  }]);\n\n  return MovieDetail;\n}(Component);\n\nexport default MovieDetail;\nexport { GetAllMovies };\nvar MovieWrapper = styled.div(_templateObject2(), function (props) {\n  return props.backdrop;\n});\nvar MovieInfo = styled.div(_templateObject3());\nvar UserReviewSection = styled.div(_templateObject4());\nvar SectionBreak = styled.hr(_templateObject5());","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/MovieDetail.js"],"names":["React","Component","styled","Query","gql","AddToFavorites","User","MovieReviews","AddReview","SeenMovie","POSTER_PATH","BACKDROP_PATH","GetAllMovies","MovieDetail","state","movie","fetch","props","match","params","id","res","json","setState","console","log","backdrop_path","poster_path","title","release_date","overview","currentUser","data","loading","getAllMovies","error","message","movieDBIds","map","movieDBId","inDB","includes","usersSeenMovies","moviesSeen","seenThisMovie","username","MovieWrapper","div","backdrop","MovieInfo","UserReviewSection","SectionBreak","hr"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport AddToFavorites from './AddToFavorites';\nimport User from './auth/User';\nimport MovieReviews from './MovieReviews';\nimport AddReview from './AddReview';\nimport SeenMovie from './SeenMovie';\n\n\nconst POSTER_PATH = 'http://image.tmdb.org/t/p/w154';\nconst BACKDROP_PATH = 'http://image.tmdb.org/t/p/w1280';\n\nconst GetAllMovies = gql`\nquery {\n  getAllMovies{\n    movieDBId\n  }\n}\n`;\n\nclass MovieDetail extends Component {\n\n  state = {\n    movie: {}\n  }\n\n  async componentDidMount() {\n    try {\n      const res = await fetch(`https://api.themoviedb.org/3/movie/${this.props.match.params.id}?api_key=a8cdfa69af55f80964d61a4a96025998&language=en-US`);\n\n      const movie = await res.json();\n      await this.setState({ movie });\n    }catch(e) {\n      console.log(e);\n    }\n  }\n\n  render() {\n    const { movie } = this.state;\n    return (\n      <div>\n      <MovieWrapper backdrop={`${BACKDROP_PATH}${movie.backdrop_path}`}>\n        <MovieInfo>\n\n            <img src={`${POSTER_PATH}${movie.poster_path}`} alt={movie.title} />\n\n            <div>\n              <h1>{movie.title}</h1>\n              <h3>{movie.release_date}</h3>\n              <p>{movie.overview}</p>\n              </div>\n        </MovieInfo>\n      </MovieWrapper>\n        <User>\n        {({data: {currentUser}, loading }) => {\n          if(loading) return <div>Loading</div>;\n            return(\n              <Query query={GetAllMovies}>\n              {({data: {getAllMovies}, loading, error}) =>{\n                if(loading) return <div>Loading</div>;\n                if(error) return <div>{error.message}</div>\n                const movieDBIds = getAllMovies.map(movie => movie.movieDBId)\n                const inDB = movieDBIds.includes(movie.id);\n                if(!currentUser){\n                  return(\n                      <UserReviewSection>\n                      <h1>Reviews</h1>\n                      <SectionBreak></SectionBreak>\n                      {inDB && <MovieReviews movieDBId={movie.id} />}\n                      </UserReviewSection>\n                  )\n                }\n                const usersSeenMovies = currentUser.moviesSeen.map(movie => movie.movieDBId);\n                const seenThisMovie = usersSeenMovies.includes(movie.id);\n                return(\n              <UserReviewSection>\n                {!seenThisMovie && <SeenMovie movie={movie} user={currentUser}/>}\n                {seenThisMovie && <AddToFavorites movie={movie} user={currentUser}/>}\n                <h1>Reviews</h1>\n                      <SectionBreak></SectionBreak>\n                      {seenThisMovie &&<AddReview title={movie.title} username={currentUser.username} movieDBId={movie.id} posterPath={movie.poster_path}/>}\n                      {inDB && <MovieReviews movieDBId={movie.id} />}\n              </UserReviewSection>\n              )}}\n              </Query>\n            )}}\n        </User>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetail;\nexport {GetAllMovies};\n\nconst MovieWrapper = styled.div`\n  padding-top: 50vh;\n  background: url(${(props) => props.backdrop }) no-repeat;\n  background-size: cover;\n`;\n\nconst MovieInfo = styled.div`\n  background: var(--main-bg-color);\n  text-align: left;\n  padding: 2rem 10%;\n  display: flex;\n  color: var(--main-text-color);\n  h1 {\n    color: var(--main-green);\n  }\n  > div {\n    margin-left: 20px;\n  }\n  img {\n    position: relative;\n    top: -5rem;\n  }\n`;\n\nconst UserReviewSection = styled.div`\n  margin: 2rem 10%;\n\n  h1 {\n    color: var(--main-green);\n    margin-bottom: 0;\n  }\n`;\n\nconst SectionBreak = styled.hr`\n  border-top: .5px solid var(--main-green);\n  border-bottom: .5px solid var(--main-green);\n  margin: 0;\n  margin-bottom: 5px;\n`;"]},"metadata":{},"sourceType":"module"}