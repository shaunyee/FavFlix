{"ast":null,"code":"import _regeneratorRuntime from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/AddToFavorites.js\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    height: 20px;\\n    width: 20px\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    background: #FF5454;\\n    border: none;\\n    color: var(--main-bg-color);\\n    font-size: 1rem;\\n    padding: .75rem;\\n    border-radius: 25px;\\n    margin-top: .5rem;\\n\\n    :hover {\\n        background: #BA3E3E;\\n    }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($title: String!, $username: String!){\\n        favorite(title: $title, username: $username){\\n            title\\n        }\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($title: String!, $movieDBId: Int!, $posterPath: String!){\\n        addMovie(title: $title, movieDBId: $movieDBId, posterPath: $posterPath){\\n            title\\n            posterPath\\n            movieDBId\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\nimport Error from './utils/Error';\nimport { CurrentUserQuery } from './auth/User';\nimport Unfavorite from './Unfavorite';\nimport favoriteIcon from \"../assets/favorite.svg\";\nimport { GetMovie } from './MovieReviews';\nvar AddMovie = gql(_templateObject());\nvar FavoriteMovie = gql(_templateObject2());\n\nvar AddToFavorites = function AddToFavorites(_ref) {\n  var movie = _ref.movie,\n      user = _ref.user;\n\n  var handleFavorite =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(addMovie, favorite) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return addMovie();\n\n            case 2:\n              _context.next = 4;\n              return favorite();\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    return function handleFavorite(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return React.createElement(Mutation, {\n    mutation: FavoriteMovie,\n    variables: {\n      title: movie.title,\n      username: user.username\n    },\n    refetchQueries: [{\n      query: CurrentUserQuery\n    }, {\n      query: GetMovie,\n      variables: {\n        movieDBId: movie.id\n      }\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, function (favorite, _ref3) {\n    var loading = _ref3.loading;\n    return React.createElement(Mutation, {\n      mutation: AddMovie,\n      variables: {\n        title: movie.title,\n        movieDBId: movie.id,\n        posterPath: movie.poster_path\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, function (addMovie, _ref4) {\n      var loading = _ref4.loading,\n          error = _ref4.error;\n      var userFavIds = user.favorites.map(function (fav) {\n        return fav.movieDBId;\n      });\n      var alreadyFavorited = userFavIds.includes(movie.id);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, alreadyFavorited ? React.createElement(Unfavorite, {\n        movie: movie,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }) : React.createElement(FavoriteButton, {\n        onClick: function onClick() {\n          return handleFavorite(addMovie, favorite);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(FavoriteIcon, {\n        src: favoriteIcon,\n        alt: \"fav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }), \"Favorit\", loading ? \"ing\" : \"e\"), error && React.createElement(Error, {\n        err: error.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    });\n  });\n};\n\nexport default AddToFavorites;\nexport { AddMovie };\nvar FavoriteButton = styled.button(_templateObject3());\nvar FavoriteIcon = styled.img(_templateObject4());","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/AddToFavorites.js"],"names":["React","gql","Mutation","styled","Error","CurrentUserQuery","Unfavorite","GetMovie","AddMovie","FavoriteMovie","AddToFavorites","movie","user","handleFavorite","addMovie","favorite","title","username","query","variables","movieDBId","id","loading","posterPath","poster_path","error","userFavIds","favorites","map","fav","alreadyFavorited","includes","favoriteIcon","message","FavoriteButton","button","FavoriteIcon","img"],"mappings":"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","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\n\nimport Error from './utils/Error';\nimport { CurrentUserQuery } from './auth/User';\nimport Unfavorite from './Unfavorite';\nimport favoriteIcon from '../assets/favorite.svg';\nimport { GetMovie } from './MovieReviews';\n\nconst AddMovie = gql`\n    mutation($title: String!, $movieDBId: Int!, $posterPath: String!){\n        addMovie(title: $title, movieDBId: $movieDBId, posterPath: $posterPath){\n            title\n            posterPath\n            movieDBId\n        }\n    }\n`;\nconst FavoriteMovie = gql`\n    mutation($title: String!, $username: String!){\n        favorite(title: $title, username: $username){\n            title\n        }\n    }\n`;\n\nconst AddToFavorites = ({movie, user}) => {\n    const handleFavorite = async (addMovie, favorite) => {\n        await addMovie();\n        await favorite();\n    }\n  return (\n      <Mutation \n      mutation={FavoriteMovie}\n      variables={{\n      title: movie.title,\n      username: user.username\n      }}\n      refetchQueries={[{query: CurrentUserQuery}, {query: GetMovie, variables: {movieDBId: movie.id}}]}\n      >\n      {(favorite, {loading}) => {\n        return(\n      <Mutation mutation={AddMovie} \n      variables={{\n      title: movie.title, \n      movieDBId: movie.id, \n      posterPath: movie.poster_path,\n      }}\n      >\n      {(addMovie, {loading, error}) => {\n          const userFavIds = user.favorites.map(fav => fav.movieDBId);\n          const alreadyFavorited = userFavIds.includes(movie.id);\n          return(\n              <div>\n              {alreadyFavorited ? <Unfavorite movie={movie} user={user} /> : <FavoriteButton onClick={() => handleFavorite(addMovie, favorite)}><FavoriteIcon src={favoriteIcon} alt=\"fav\"/>Favorit{loading ? \"ing\" : \"e\"}</FavoriteButton>\n              }\n                {error && <Error err={error.message}/>}\n              </div>\n            \n          )\n      }}\n      </Mutation>\n        )}}\n      </Mutation>\n  )\n}\n\nexport default AddToFavorites;\nexport { AddMovie };\n\nconst FavoriteButton = styled.button`\n    display: block;\n    background: #FF5454;\n    border: none;\n    color: var(--main-bg-color);\n    font-size: 1rem;\n    padding: .75rem;\n    border-radius: 25px;\n    margin-top: .5rem;\n\n    :hover {\n        background: #BA3E3E;\n    }\n`;\n\nconst FavoriteIcon = styled.img`\n    height: 20px;\n    width: 20px\n`;"]},"metadata":{},"sourceType":"module"}