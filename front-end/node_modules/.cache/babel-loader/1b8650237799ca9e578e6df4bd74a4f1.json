{"ast":null,"code":"var _jsxFileName = \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom';\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\nimport App from './components/App';\nimport MovieDetail from './components/MovieDetail';\nimport Users from './components/auth/Users';\nimport Signup from './components/auth/Signup';\nimport Signin from './components/auth/Signin';\nimport Nav from './components/Nav';\nimport Profile from './components/Profile';\nvar client = new ApolloClient({\n  link: createHttpLink({\n    uri: \"http://localhost:4000/graphql\",\n    credentials: \"include\"\n  }),\n  cache: new InMemoryCache()\n}); // const client = new ApolloClient({\n//     uri: \"http://localhost:4000/graphql\",\n//     fetchOptions: {\n//         credentials: 'include'\n//     }\n// })\n\nvar AppWithRoutes = function AppWithRoutes() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: App,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/movie/:id\",\n    component: MovieDetail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/signup\",\n    component: Signup,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/signin\",\n    component: Signin,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/users\",\n    component: Users,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Route, {\n    path: \"/user/:id\",\n    component: Profile,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Redirect, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))));\n};\n\nReactDOM.render(React.createElement(AppWithRoutes, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 58\n  },\n  __self: this\n}), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/index.js"],"names":["React","ReactDOM","serviceWorker","BrowserRouter","Router","Route","Switch","Redirect","ApolloClient","ApolloProvider","createHttpLink","InMemoryCache","App","MovieDetail","Users","Signup","Signin","Nav","Profile","client","link","uri","credentials","cache","AppWithRoutes","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,KAFJ,EAGIC,MAHJ,EAIIC,QAJJ,QAKO,kBALP;AAMA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAEA,IAAMC,MAAM,GAAG,IAAIX,YAAJ,CAAiB;AAC5BY,EAAAA,IAAI,EAAEV,cAAc,CAAC;AACjBW,IAAAA,GAAG,EAAE,+BADY;AAEjBC,IAAAA,WAAW,EAAE;AAFI,GAAD,CADQ;AAK5BC,EAAAA,KAAK,EAAE,IAAIZ,aAAJ;AALqB,CAAjB,CAAf,C,CAQA;AACA;AACA;AACA;AACA;AACA;;AAEE,IAAMa,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SACpB,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEL,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEP,GAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,YAAZ;AAAyB,IAAA,SAAS,EAAEC,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAGI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEE,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,SAAZ;AAAsB,IAAA,SAAS,EAAEC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,SAAS,EAAEF,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,SAAS,EAAEI,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CAFA,CADJ,CADJ,CADoB;AAAA,CAAtB;;AAmBFjB,QAAQ,CAACwB,MAAT,CAAgB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAmCC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAnC,E,CAEA;AACA;AACA;;AACAzB,aAAa,CAAC0B,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport {\n    BrowserRouter as Router,\n    Route,\n    Switch,\n    Redirect\n} from 'react-router-dom';\nimport ApolloClient from 'apollo-client';\nimport { ApolloProvider } from 'react-apollo';\nimport { createHttpLink } from 'apollo-link-http';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nimport App from './components/App';\nimport MovieDetail from './components/MovieDetail';\nimport Users from './components/auth/Users';\nimport Signup from './components/auth/Signup';\nimport Signin from './components/auth/Signin';\nimport Nav from './components/Nav';\nimport Profile from './components/Profile';\n\nconst client = new ApolloClient({\n    link: createHttpLink({\n        uri: \"http://localhost:4000/graphql\",\n        credentials: \"include\"\n    }),\n    cache: new InMemoryCache()\n});\n\n// const client = new ApolloClient({\n//     uri: \"http://localhost:4000/graphql\",\n//     fetchOptions: {\n//         credentials: 'include'\n//     }\n// })\n\n  const AppWithRoutes = () => (\n    <ApolloProvider client={client}>\n        <Router>\n            <div>\n            <Nav />\n            <Switch>\n                <Route exact path=\"/\" component={App} />\n                <Route path=\"/movie/:id\" component={MovieDetail} />\n                <Route path=\"/signup\" component={Signup} />\n                <Route path=\"/signin\" component={Signin} />\n                <Route path=\"/users\" component={Users} />\n                <Route path=\"/user/:id\" component={Profile} />\n                <Redirect to=\"/\" />\n            </Switch>\n            </div>\n        </Router>\n    </ApolloProvider>\n  )\n\nReactDOM.render(<AppWithRoutes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}