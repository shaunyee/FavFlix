{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/Unfavorite.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($title: String!, $username: String!){\\n        unfavorite(title: $title, username: $username){\\n            movieDBId\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { CurrentUserQuery } from './auth/User';\nvar UnfavoriteMovie = gql(_templateObject());\n\nvar Unfavorite = function Unfavorite(_ref) {\n  var movie = _ref.movie,\n      user = _ref.user;\n  return React.createElement(Mutation, {\n    mutation: UnfavoriteMovie,\n    variables: {\n      title: movie.title,\n      username: user.username\n    },\n    refetchQueries: [{\n      query: CurrentUserQuery\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, function (unfavorite, _ref2) {\n    var loading = _ref2.loading;\n    return React.createElement(\"button\", {\n      onClick: function onClick() {\n        return unfavorite();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Unfavorit\", loading ? \"ing\" : \"e\");\n  });\n};\n\nexport default Unfavorite;","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/Unfavorite.js"],"names":["React","gql","Mutation","CurrentUserQuery","UnfavoriteMovie","Unfavorite","movie","user","title","username","query","unfavorite","loading"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,IAAMC,eAAe,GAAGH,GAAH,mBAArB;;AAQA,IAAMI,UAAU,GAAG,SAAbA,UAAa,OAAmB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACpC,SACI,oBAAC,QAAD;AACA,IAAA,QAAQ,EAAEH,eADV;AAEA,IAAA,SAAS,EAAE;AAACI,MAAAA,KAAK,EAAEF,KAAK,CAACE,KAAd;AAAqBC,MAAAA,QAAQ,EAAEF,IAAI,CAACE;AAApC,KAFX;AAGA,IAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAEP;AAAR,KAAD,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,UAACQ,UAAD,SAA2B;AAAA,QAAbC,OAAa,SAAbA,OAAa;AACxB,WACE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMD,UAAU,EAAhB;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA+CC,OAAO,GAAG,KAAH,GAAW,GAAjE,CADF;AAEE,GARN,CADJ;AAYD,CAbD;;AAcA,eAAeP,UAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nimport { CurrentUserQuery } from './auth/User'\n\nconst UnfavoriteMovie = gql`\n    mutation($title: String!, $username: String!){\n        unfavorite(title: $title, username: $username){\n            movieDBId\n        }\n    }\n`;\n\nconst Unfavorite = ({movie, user}) => {\n  return (\n      <Mutation \n      mutation={UnfavoriteMovie}\n      variables={{title: movie.title, username: user.username}}\n      refetchQueries={[{query: CurrentUserQuery}]}\n      >\n      {(unfavorite, {loading}) => {\n          return(\n            <button onClick={() => unfavorite()}>Unfavorit{loading ? \"ing\" : \"e\"}</button>\n          )}}\n      </Mutation>\n  )\n}\nexport default Unfavorite;"]},"metadata":{},"sourceType":"module"}