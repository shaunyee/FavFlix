{"ast":null,"code":"import _classCallCheck from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/auth/Users.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n        getAllUsers{\\n            username\\n            email\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nvar usersQuery = gql(_templateObject());\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users() {\n    _classCallCheck(this, Users);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Users).apply(this, arguments));\n  }\n\n  _createClass(Users, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Query, {\n        query: usersQuery,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, function (_ref) {\n        var data = _ref.data,\n            error = _ref.error,\n            loading = _ref.loading;\n        if (loading) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Loading\");\n        if (error) return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, \"Error\");\n        console.log(data);\n        var getAllUsers = data.getAllUsers;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, getAllUsers.map(function (user) {\n          return React.createElement(\"ul\", {\n            key: user.email,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 27\n            },\n            __self: this\n          }, React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, user.username));\n        }));\n      });\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nexport { Users as default };","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/auth/Users.js"],"names":["React","Component","gql","Query","usersQuery","Users","data","error","loading","console","log","getAllUsers","map","user","email","username"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAiB,aAAjB;AACA,SAASC,KAAT,QAAsB,cAAtB;AAEA,IAAMC,UAAU,GAAGF,GAAH,mBAAhB;;IAUqBG,K;;;;;;;;;;;;;6BACV;AACP,aACE,oBAAC,KAAD;AAAO,QAAA,KAAK,EAAED,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,gBAA8B;AAAA,YAA3BE,IAA2B,QAA3BA,IAA2B;AAAA,YAArBC,KAAqB,QAArBA,KAAqB;AAAA,YAAdC,OAAc,QAAdA,OAAc;AAC3B,YAAGA,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACZ,YAAGD,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACVE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AAH2B,YAIpBK,WAJoB,GAILL,IAJK,CAIpBK,WAJoB;AAK3B,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,WAAW,CAACC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,iBACjB;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKD,IAAI,CAACE,QAAV,CADJ,CADiB;AAAA,SAApB,CADL,CADJ;AASH,OAfH,CADF;AAoBD;;;;EAtBgCd,S;;SAAdI,K","sourcesContent":["import React, { Component } from 'react';\nimport gql  from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst usersQuery = gql`\n    query {\n        getAllUsers{\n            username\n            email\n        }\n    }\n`;\n\n\nexport default class Users extends Component {\n  render() {\n    return (\n      <Query query={usersQuery}>\n        {({ data, error, loading }) => {\n            if(loading) return <div>Loading</div>;\n            if(error) return <div>Error</div>;\n            console.log(data);\n            const {getAllUsers} = data;\n            return(\n                <div>\n                    {getAllUsers.map(user => (\n                        <ul key={user.email}>\n                            <h1>{user.username}</h1>\n                        </ul>\n                    ))}\n                </div>\n            )\n        }\n        }\n      </Query>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}