{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/AddToFavorites.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($title: String!, $movieDBId: String!, $posterPath: String!, $username: String!){\\n        addMovie(title: $title, movieDBId: $movieDBId, posterPath: $posterPath, username: $username){\\n            title\\n            posterPath\\n            movieDBId\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport Error from './utils/Error';\nvar AddMovie = gql(_templateObject());\n\nvar AddToFavorites = function AddToFavorites(_ref) {\n  var movie = _ref.movie,\n      user = _ref.user;\n\n  var addToFav = function addToFav(addMovie) {\n    addMovie();\n  };\n\n  return React.createElement(Mutation, {\n    mutation: AddMovie,\n    variables: {\n      title: movie.title,\n      movieDBId: movie.id,\n      posterPath: movie.poster_path,\n      username: user.username\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, function (addMovie, _ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: function onClick() {\n        return addToFav(addMovie);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"Add\", loading ? \"ing\" : '', \" To Favorites\"), error && React.createElement(Error, {\n      err: error.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default AddToFavorites;","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/AddToFavorites.js"],"names":["React","gql","Mutation","Error","AddMovie","AddToFavorites","movie","user","addToFav","addMovie","title","movieDBId","id","posterPath","poster_path","username","loading","error","message"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AAEA,IAAMC,QAAQ,GAAGH,GAAH,mBAAd;;AAUA,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,OAAmB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,IAAU,QAAVA,IAAU;;AACtC,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD,EAAc;AAC3BA,IAAAA,QAAQ;AACX,GAFD;;AAGF,SACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEL,QAApB;AACA,IAAA,SAAS,EAAE;AAACM,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAAd;AACXC,MAAAA,SAAS,EAAEL,KAAK,CAACM,EADN;AAEXC,MAAAA,UAAU,EAAEP,KAAK,CAACQ,WAFP;AAGXC,MAAAA,QAAQ,EAAER,IAAI,CAACQ;AAHJ,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMC,UAACN,QAAD,SAAgC;AAAA,QAApBO,OAAoB,SAApBA,OAAoB;AAAA,QAAXC,KAAW,SAAXA,KAAW;AAC7B,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMT,QAAQ,CAACC,QAAD,CAAd;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+CO,OAAO,GAAG,KAAH,GAAW,EAAjE,kBADF,EAEGC,KAAK,IAAI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACC,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFZ,CADJ;AAOH,GAdD,CADJ;AAkBD,CAtBD;;AAwBA,eAAeb,cAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nimport Error from './utils/Error';\n\nconst AddMovie = gql`\n    mutation($title: String!, $movieDBId: String!, $posterPath: String!, $username: String!){\n        addMovie(title: $title, movieDBId: $movieDBId, posterPath: $posterPath, username: $username){\n            title\n            posterPath\n            movieDBId\n        }\n    }\n`;\n\nconst AddToFavorites = ({movie, user}) => {\n    const addToFav = (addMovie) => {\n        addMovie()\n    }\n  return (\n      <Mutation mutation={AddMovie} \n      variables={{title: movie.title, \n      movieDBId: movie.id, \n      posterPath: movie.poster_path,\n      username: user.username\n      }}>\n      {(addMovie, {loading, error}) => {\n          return(\n              <div>\n                <button onClick={() => addToFav(addMovie)}>Add{loading ? \"ing\" : ''} To Favorites</button>\n                {error && <Error err={error.message}/>}\n              </div>\n            \n          )\n      }}\n      </Mutation>\n  )\n}\n\nexport default AddToFavorites;"]},"metadata":{},"sourceType":"module"}