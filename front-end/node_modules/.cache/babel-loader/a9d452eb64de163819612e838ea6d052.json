{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/AddToFavorites.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($title: String!, $movieDBId: Int!, $posterPath: String!, $username: String!){\\n        addMovie(title: $title, movieDBId: $movieDBId, posterPath: $posterPath, username: $username){\\n            title\\n            posterPath\\n            movieDBId\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport Error from './utils/Error';\nimport { CurrentUserQuery } from './auth/User';\nimport Unfavorite from './Unfavorite';\nvar AddMovie = gql(_templateObject());\n\nvar AddToFavorites = function AddToFavorites(_ref) {\n  var movie = _ref.movie,\n      user = _ref.user;\n  return React.createElement(Mutation, {\n    mutation: AddMovie,\n    variables: {\n      title: movie.title,\n      movieDBId: movie.id,\n      posterPath: movie.poster_path,\n      username: user.username\n    },\n    refetchQueries: [{\n      query: CurrentUserQuery\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, function (addMovie, _ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error;\n    var userFavIds = user.favorites.map(function (fav) {\n      return fav.movieDBId;\n    });\n    var alreadyFavorited = userFavIds.includes(movie.id);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, alreadyFavorited ? React.createElement(Unfavorite, {\n      movie: movie,\n      user: user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }) : React.createElement(\"button\", {\n      onClick: function onClick() {\n        return addMovie();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Add\", loading ? \"ing\" : '', \" To Favorites\"), error && React.createElement(Error, {\n      err: error.message,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }));\n  });\n};\n\nexport default AddToFavorites;","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/AddToFavorites.js"],"names":["React","gql","Mutation","Error","CurrentUserQuery","Unfavorite","AddMovie","AddToFavorites","movie","user","title","movieDBId","id","posterPath","poster_path","username","query","addMovie","loading","error","userFavIds","favorites","map","fav","alreadyFavorited","includes","message"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,IAAMC,QAAQ,GAAGL,GAAH,mBAAd;;AAUA,IAAMM,cAAc,GAAG,SAAjBA,cAAiB,OAAmB;AAAA,MAAjBC,KAAiB,QAAjBA,KAAiB;AAAA,MAAVC,IAAU,QAAVA,IAAU;AACxC,SACI,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEH,QAApB;AACA,IAAA,SAAS,EAAE;AACTI,MAAAA,KAAK,EAAEF,KAAK,CAACE,KADJ;AAEXC,MAAAA,SAAS,EAAEH,KAAK,CAACI,EAFN;AAGXC,MAAAA,UAAU,EAAEL,KAAK,CAACM,WAHP;AAIXC,MAAAA,QAAQ,EAAEN,IAAI,CAACM;AAJJ,KADX;AAOA,IAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAEZ;AAAR,KAAD,CAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQC,UAACa,QAAD,SAAgC;AAAA,QAApBC,OAAoB,SAApBA,OAAoB;AAAA,QAAXC,KAAW,SAAXA,KAAW;AAC7B,QAAMC,UAAU,GAAGX,IAAI,CAACY,SAAL,CAAeC,GAAf,CAAmB,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACZ,SAAR;AAAA,KAAtB,CAAnB;AACA,QAAMa,gBAAgB,GAAGJ,UAAU,CAACK,QAAX,CAAoBjB,KAAK,CAACI,EAA1B,CAAzB;AACA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCY,gBAAgB,GAAG,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAEhB,KAAnB;AAA0B,MAAA,IAAI,EAAEC,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAA8C;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMQ,QAAQ,EAAd;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAuCC,OAAO,GAAG,KAAH,GAAW,EAAzD,kBAD/D,EAGGC,KAAK,IAAI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAEA,KAAK,CAACO,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHZ,CADJ;AAQH,GAnBD,CADJ;AAuBD,CAxBD;;AA0BA,eAAenB,cAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nimport Error from './utils/Error';\nimport { CurrentUserQuery } from './auth/User';\nimport Unfavorite from './Unfavorite';\n\nconst AddMovie = gql`\n    mutation($title: String!, $movieDBId: Int!, $posterPath: String!, $username: String!){\n        addMovie(title: $title, movieDBId: $movieDBId, posterPath: $posterPath, username: $username){\n            title\n            posterPath\n            movieDBId\n        }\n    }\n`;\n\nconst AddToFavorites = ({movie, user}) => {\n  return (\n      <Mutation mutation={AddMovie} \n      variables={{\n        title: movie.title, \n      movieDBId: movie.id, \n      posterPath: movie.poster_path,\n      username: user.username\n      }}\n      refetchQueries={[{query: CurrentUserQuery}]}>\n      {(addMovie, {loading, error}) => {\n          const userFavIds = user.favorites.map(fav => fav.movieDBId);\n          const alreadyFavorited = userFavIds.includes(movie.id);\n          return(\n              <div>\n              {alreadyFavorited ? <Unfavorite movie={movie} user={user} /> : <button onClick={() => addMovie()}>Add{loading ? \"ing\" : ''} To Favorites</button>\n              }\n                {error && <Error err={error.message}/>}\n              </div>\n            \n          )\n      }}\n      </Mutation>\n  )\n}\n\nexport default AddToFavorites;"]},"metadata":{},"sourceType":"module"}