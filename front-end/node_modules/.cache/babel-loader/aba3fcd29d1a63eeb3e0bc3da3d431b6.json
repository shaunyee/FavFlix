{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/Unfavorite.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($_id: String!, $username: String!){\\n        unfavorite(_id: $_id, username: $username){\\n            movieDBId\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport { CurrentUserQuery } from './auth/User';\nvar UnfavoriteMovie = gql(_templateObject());\n\nvar Unfavorite = function Unfavorite(movie, user) {\n  return React.createElement(Mutation, {\n    mutation: UnfavoriteMovie,\n    variables: {\n      _id: movie._id,\n      username: user.username\n    },\n    refetchQueries: [{\n      query: CurrentUserQuery\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, function (unfavorite, _ref) {\n    var loading = _ref.loading,\n        error = _ref.error;\n    return React.createElement(\"button\", {\n      onClick: function onClick() {\n        return unfavorite();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"Unfavorite\");\n  });\n};\n\nexport default Unfavorite;","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/Unfavorite.js"],"names":["React","gql","Mutation","CurrentUserQuery","UnfavoriteMovie","Unfavorite","movie","user","_id","username","query","unfavorite","loading","error"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,gBAAT,QAAiC,aAAjC;AAEA,IAAMC,eAAe,GAAGH,GAAH,mBAArB;;AAQA,IAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,IAAR,EAAiB;AAClC,SACI,oBAAC,QAAD;AACA,IAAA,QAAQ,EAAEH,eADV;AAEA,IAAA,SAAS,EAAE;AAACI,MAAAA,GAAG,EAACF,KAAK,CAACE,GAAX;AAAgBC,MAAAA,QAAQ,EAAEF,IAAI,CAACE;AAA/B,KAFX;AAGA,IAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAEP;AAAR,KAAD,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKC,UAACQ,UAAD,QAAkC;AAAA,QAApBC,OAAoB,QAApBA,OAAoB;AAAA,QAAXC,KAAW,QAAXA,KAAW;AAC/B,WACE;AAAQ,MAAA,OAAO,EAAE;AAAA,eAAMF,UAAU,EAAhB;AAAA,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAEE,GARN,CADJ;AAYD,CAbD;;AAcA,eAAeN,UAAf","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\n\nimport { CurrentUserQuery } from './auth/User'\n\nconst UnfavoriteMovie = gql`\n    mutation($_id: String!, $username: String!){\n        unfavorite(_id: $_id, username: $username){\n            movieDBId\n        }\n    }\n`;\n\nconst Unfavorite = (movie, user) => {\n  return (\n      <Mutation \n      mutation={UnfavoriteMovie}\n      variables={{_id:movie._id, username: user.username}}\n      refetchQueries={[{query: CurrentUserQuery}]}\n      >\n      {(unfavorite, {loading, error}) => {\n          return(\n            <button onClick={() => unfavorite()}>Unfavorite</button>\n          )}}\n      </Mutation>\n  )\n}\nexport default Unfavorite;"]},"metadata":{},"sourceType":"module"}