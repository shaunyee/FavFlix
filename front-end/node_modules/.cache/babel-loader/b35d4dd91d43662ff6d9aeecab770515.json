{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/auth/User.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\nquery {\\n    currentUser {\\n        _id\\n        email\\n        username\\n        favorites {\\n            title\\n            posterPath\\n            movieDBId\\n        }\\n        reviews{\\n            _id\\n        }\\n        moviesSeen{\\n            _id\\n            movieDBId\\n        }\\n    }\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nvar CurrentUserQuery = gql(_templateObject());\n\nvar User = function User(props) {\n  return React.createElement(Query, Object.assign({}, props, {\n    query: CurrentUserQuery,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), function (payload) {\n    return props.children(payload);\n  });\n};\n\nexport default User;\nexport { CurrentUserQuery };","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/graphql-apollo/projects/movies2/front-end/src/components/auth/User.js"],"names":["React","Query","gql","CurrentUserQuery","User","props","payload","children"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,IAAMC,gBAAgB,GAAGD,GAAH,mBAAtB;;AAsBA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAAAC,KAAK;AAAA,SACd,oBAAC,KAAD,oBAAWA,KAAX;AAAkB,IAAA,KAAK,EAAEF,gBAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACK,UAAAG,OAAO;AAAA,WAAID,KAAK,CAACE,QAAN,CAAeD,OAAf,CAAJ;AAAA,GADZ,CADc;AAAA,CAAlB;;AAKA,eAAeF,IAAf;AACA,SAASD,gBAAT","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst CurrentUserQuery = gql`\nquery {\n    currentUser {\n        _id\n        email\n        username\n        favorites {\n            title\n            posterPath\n            movieDBId\n        }\n        reviews{\n            _id\n        }\n        moviesSeen{\n            _id\n            movieDBId\n        }\n    }\n}\n`;\n\nconst User = props => (\n    <Query {...props} query={CurrentUserQuery}>\n        {payload => props.children(payload)}\n    </Query>\n)\nexport default User;\nexport { CurrentUserQuery };"]},"metadata":{},"sourceType":"module"}