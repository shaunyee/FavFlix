{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/RelikeMovie.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    display: block;\\n    background: var(--main-green);\\n    border: none;\\n    color: var(--main-bg-color);\\n    font-size: 1rem;\\n    padding: .75rem;\\n    border-radius: 25px;\\n    margin-top: .5rem;\\n\\n    :hover {\\n        background: var(--main-green-hover);\\n    }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    mutation($title: String!, $username: String!){\\n        relikeMovie(title: $title, username: $username){\\n            _id\\n        }\\n    }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\nimport { CurrentUserQuery } from './auth/User';\nimport { GetMovie } from './MovieReviews';\nvar RelikeThisMovie = gql(_templateObject());\n\nvar RelikeMovie = function RelikeMovie(_ref) {\n  var movie = _ref.movie,\n      user = _ref.user;\n  return React.createElement(Mutation, {\n    mutation: RelikeThisMovie,\n    variables: {\n      title: movie.title,\n      username: user.username\n    },\n    refetchQueries: [{\n      query: GetMovie,\n      variables: {\n        movieDBId: movie.id\n      }\n    }, {\n      query: CurrentUserQuery\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, function (relikeMovie, _ref2) {\n    var loading = _ref2.loading,\n        error = _ref2.error;\n    return React.createElement(RelikeButton, {\n      onClick: function onClick() {\n        return relikeMovie();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"Relike this Movie\");\n  });\n};\n\nexport default RelikeMovie;\nvar RelikeButton = styled.button(_templateObject2());","map":{"version":3,"sources":["/Users/yeezy/Desktop/projects/react/practice/fav-flix/front-end/src/components/RelikeMovie.js"],"names":["React","gql","Mutation","styled","CurrentUserQuery","GetMovie","RelikeThisMovie","RelikeMovie","movie","user","title","username","query","variables","movieDBId","id","relikeMovie","loading","error","RelikeButton","button"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAAQC,gBAAR,QAA+B,aAA/B;AACA,SAAQC,QAAR,QAAuB,gBAAvB;AAEA,IAAMC,eAAe,GAAGL,GAAH,mBAArB;;AAQA,IAAMM,WAAW,GAAG,SAAdA,WAAc,OAAqB;AAAA,MAAlBC,KAAkB,QAAlBA,KAAkB;AAAA,MAAXC,IAAW,QAAXA,IAAW;AACvC,SACI,oBAAC,QAAD;AACA,IAAA,QAAQ,EAAEH,eADV;AAEA,IAAA,SAAS,EAAE;AAACI,MAAAA,KAAK,EAAEF,KAAK,CAACE,KAAd;AAAqBC,MAAAA,QAAQ,EAAEF,IAAI,CAACE;AAApC,KAFX;AAGA,IAAA,cAAc,EAAE,CAAC;AAACC,MAAAA,KAAK,EAAEP,QAAR;AAAkBQ,MAAAA,SAAS,EAAE;AAACC,QAAAA,SAAS,EAAEN,KAAK,CAACO;AAAlB;AAA7B,KAAD,EAAsD;AAACH,MAAAA,KAAK,EAAER;AAAR,KAAtD,CAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,UAACY,WAAD;AAAA,QAAeC,OAAf,SAAeA,OAAf;AAAA,QAAwBC,KAAxB,SAAwBA,KAAxB;AAAA,WACG,oBAAC,YAAD;AAAc,MAAA,OAAO,EAAE;AAAA,eAAMF,WAAW,EAAjB;AAAA,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADH;AAAA,GALH,CADJ;AAWD,CAZD;;AAaA,eAAeT,WAAf;AAEA,IAAMY,YAAY,GAAGhB,MAAM,CAACiB,MAAV,oBAAlB","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\n\nimport {CurrentUserQuery} from './auth/User';\nimport {GetMovie} from './MovieReviews';\n\nconst RelikeThisMovie = gql`\n    mutation($title: String!, $username: String!){\n        relikeMovie(title: $title, username: $username){\n            _id\n        }\n    }\n`;\n\nconst RelikeMovie = ({ movie, user }) => {\n  return (\n      <Mutation \n      mutation={RelikeThisMovie} \n      variables={{title: movie.title, username: user.username}}\n      refetchQueries={[{query: GetMovie, variables: {movieDBId: movie.id}}, {query: CurrentUserQuery}]}\n      >\n        {(relikeMovie, {loading, error}) => (\n            <RelikeButton onClick={() => relikeMovie()}>Relike this Movie</RelikeButton>\n        )}\n      </Mutation>\n  )\n}\nexport default RelikeMovie;\n\nconst RelikeButton = styled.button`\n    display: block;\n    background: var(--main-green);\n    border: none;\n    color: var(--main-bg-color);\n    font-size: 1rem;\n    padding: .75rem;\n    border-radius: 25px;\n    margin-top: .5rem;\n\n    :hover {\n        background: var(--main-green-hover);\n    }\n`;"]},"metadata":{},"sourceType":"module"}